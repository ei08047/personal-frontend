{"ast":null,"code":"var _jsxFileName = \"/Users/ze/Desktop/ecommerce/ecommerce/src/LanguageSelector.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport styles from \"./LanguageSelector.module.scss\";\nimport { StylesProvider } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  button: styles.Button,\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  item: styles.Item\n}));\nexport default function LanguageSelector() {\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const classes = useStyles();\n  const [language, setLanguage] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = event => {\n    setLanguage(event.target.value);\n    i18n.changeLanguage(event.target.value);\n    console.log();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    injectFirst: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LanguageSelector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Language\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-controlled-open-select-label\",\n    open: open,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    value: language,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"English\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"pt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Portuguese\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"ch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Chinese\")))));\n}","map":{"version":3,"sources":["/Users/ze/Desktop/ecommerce/ecommerce/src/LanguageSelector.js"],"names":["React","makeStyles","useTranslation","InputLabel","MenuItem","FormControl","Select","Button","styles","StylesProvider","useStyles","theme","button","formControl","margin","spacing","minWidth","item","Item","LanguageSelector","t","i18n","classes","language","setLanguage","useState","open","setOpen","handleChange","event","target","value","changeLanguage","console","log","handleClose","handleOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport styles from \"./LanguageSelector.module.scss\";\nimport { StylesProvider } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  button: styles.Button,\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  item:styles.Item,\n}));\n\nexport default function LanguageSelector() {\n  const { t, i18n } = useTranslation()\n  const classes = useStyles();\n  const [language, setLanguage] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setLanguage(event.target.value);\n    i18n.changeLanguage(event.target.value)\n    console.log()\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <StylesProvider injectFirst>\n    <div className={styles.LanguageSelector} >\n      <Button className={classes.button} onClick={handleOpen}>\n      </Button>\n      <FormControl className={classes.formControl}>\n        <InputLabel className={classes.item}>Language</InputLabel>\n        <Select\n\n          labelId=\"demo-controlled-open-select-label\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={language}\n          onChange={handleChange}\n        >\n          <MenuItem  value={\"en\"}>English</MenuItem>\n          <MenuItem value={\"pt\"}>Portuguese</MenuItem>\n          <MenuItem value={\"ch\"}>Chinese</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n    </StylesProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}