{"ast":null,"code":"var _jsxFileName = \"/Users/ze/Desktop/ecommerce/ecommerce/src/DarkMode.js\";\nimport React from \"react\";\nimport styles from \"./DarkMode.module.scss\";\nimport Switch from '@material-ui/core/Switch';\n\nclass DarkMode extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checked: localStorage.getItem(\"theme\") === \"dark\" ? true : false,\n      theme: localStorage.getItem(\"theme\")\n    };\n\n    this.toggleThemeChange = () => {\n      const {\n        checked\n      } = this.state;\n\n      if (checked === false) {\n        localStorage.setItem(\"theme\", \"dark\");\n        document.getElementsByTagName(\"HTML\")[0].setAttribute(\"data-theme\", localStorage.getItem(\"theme\")); // Update our state\n\n        this.setState({\n          checked: true\n        });\n      } else {\n        localStorage.setItem(\"theme\", \"light\");\n        document.getElementsByTagName(\"HTML\")[0].setAttribute(\"data-theme\", localStorage.getItem(\"theme\")); // Update our state\n\n        this.setState({\n          // Ensure our switch is off if we change to light theme\n          checked: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.getElementsByTagName(\"HTML\")[0].setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\n  } // Class method allowing us to toggle the theme change\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Switch, {\n      value: this.state.checked,\n      onChange: () => this.toggleThemeChange(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    });\n  }\n\n}\n\nexport default DarkMode;","map":{"version":3,"sources":["/Users/ze/Desktop/ecommerce/ecommerce/src/DarkMode.js"],"names":["React","styles","Switch","DarkMode","Component","state","checked","localStorage","getItem","theme","toggleThemeChange","setItem","document","getElementsByTagName","setAttribute","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAAlC,GAA2C,IAA3C,GAAkD,KADrD;AAENC,MAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFD,KAD6B;;AAAA,SAarCE,iBAbqC,GAajB,MAAM;AACxB,YAAM;AAAEJ,QAAAA;AAAF,UAAc,KAAKD,KAAzB;;AACA,UAAIC,OAAO,KAAK,KAAhB,EAAuB;AACrBC,QAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAC,QAAAA,QAAQ,CACLC,oBADH,CACwB,MADxB,EACgC,CADhC,EAEGC,YAFH,CAEgB,YAFhB,EAE8BP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAF9B,EAFqB,CAKrB;;AACA,aAAKO,QAAL,CAAc;AACZT,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD,OATD,MASO;AACLC,QAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAC,QAAAA,QAAQ,CACLC,oBADH,CACwB,MADxB,EACgC,CADhC,EAEGC,YAFH,CAEgB,YAFhB,EAE8BP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAF9B,EAFK,CAKL;;AACA,aAAKO,QAAL,CAAc;AACZ;AACAT,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID;AACF,KAnCoC;AAAA;;AAMrCU,EAAAA,iBAAiB,GAAG;AAClBJ,IAAAA,QAAQ,CACLC,oBADH,CACwB,MADxB,EACgC,CADhC,EAEGC,YAFH,CAEgB,YAFhB,EAE8BP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAF9B;AAGD,GAVoC,CAYrC;;;AAyBAS,EAAAA,MAAM,GAAG;AACP,wBACM,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,OAA1B;AACI,MAAA,QAAQ,EAAE,MAAM,KAAKI,iBAAL,EADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN;AAID;;AA1CoC;;AA6CvC,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./DarkMode.module.scss\";\nimport Switch from '@material-ui/core/Switch';\n\nclass DarkMode extends React.Component {\n  state = {\n    checked: localStorage.getItem(\"theme\") === \"dark\" ? true : false,\n    theme: localStorage.getItem(\"theme\")\n  };\n\n  componentDidMount() {\n    document\n      .getElementsByTagName(\"HTML\")[0]\n      .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\n  }\n\n  // Class method allowing us to toggle the theme change\n  toggleThemeChange = () => {\n    const { checked } = this.state;\n    if (checked === false) {\n      localStorage.setItem(\"theme\", \"dark\");\n      document\n        .getElementsByTagName(\"HTML\")[0]\n        .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\n      // Update our state\n      this.setState({\n        checked: true\n      });\n    } else {\n      localStorage.setItem(\"theme\", \"light\");\n      document\n        .getElementsByTagName(\"HTML\")[0]\n        .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\n      // Update our state\n      this.setState({\n        // Ensure our switch is off if we change to light theme\n        checked: false\n      });\n    }\n  };\n\n  render() {\n    return (\n          <Switch value={this.state.checked}\n              onChange={() => this.toggleThemeChange()}/>\n    );\n  }\n}\n\nexport default DarkMode;"]},"metadata":{},"sourceType":"module"}