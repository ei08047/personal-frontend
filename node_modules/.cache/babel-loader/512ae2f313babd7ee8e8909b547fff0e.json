{"ast":null,"code":"var _jsxFileName = \"/Users/ze/Desktop/ecommerce/ecommerce/src/Header.js\";\nimport React from \"react\";\nimport { withTranslation } from 'react-i18next';\nimport styles from \"./Header.module.scss\";\nimport Options from './Options';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.listenToScroll = () => {\n      const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n      let control = false;\n\n      if (winScroll > 150) {\n        console.log(winScroll);\n        console.log(this.state.isCollapsed);\n\n        if (!this.state.isCollapsed) {\n          //this.props.toggleDropdown();\n          control = true;\n        }\n      } else {\n        if (!this.state.isCollapsed) {\n          control = false; //this.props.toggleDropdown();\n        }\n      }\n\n      this.setState({\n        winScroll: winScroll,\n        control: control\n      });\n    };\n\n    this.state = {\n      isCollapsed: this.props.isCollapsed,\n      winScroll: 0,\n      control: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll);\n    const height = this.divElement.clientHeight;\n    this.setState({\n      height\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.listenToScroll);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"getDerivedStateFromProps\");\n\n    if (props.isCollapsed != state.isCollapsed) {\n      console.log(props);\n      return {\n        isCollapsed: props.isCollapsed\n      };\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    if (this.state.control) return 0;else return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Options, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Header,\n      ref: divElement => {\n        this.divElement = divElement;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, this.props.t('hello.label')), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, this.state.winScroll), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, this.state.height)));\n  }\n\n}\n\n;\nexport default withTranslation()(Header);\n/*\n\n\n\n\n*/","map":{"version":3,"sources":["/Users/ze/Desktop/ecommerce/ecommerce/src/Header.js"],"names":["React","withTranslation","styles","Options","Header","Component","constructor","props","listenToScroll","winScroll","document","body","scrollTop","documentElement","control","console","log","state","isCollapsed","setState","componentDidMount","window","addEventListener","height","divElement","clientHeight","componentWillUnmount","removeEventListener","getDerivedStateFromProps","render","t"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withTranslation } from 'react-i18next';\nimport styles from \"./Header.module.scss\";\nimport Options from './Options';\n\nclass Header extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state= {\n\t\t\tisCollapsed:this.props.isCollapsed,\n\t\t\twinScroll:0,\n\t\t\tcontrol:false,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n  window.addEventListener('scroll', this.listenToScroll);\n      const height = this.divElement.clientHeight;\n    this.setState({ height });\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('scroll', this.listenToScroll)\n}\n\nstatic getDerivedStateFromProps(props, state){\n\tconsole.log(\"getDerivedStateFromProps\")\n\tif(props.isCollapsed != state.isCollapsed){\n\t\t\tconsole.log(props)\n\t\treturn {isCollapsed:props.isCollapsed}\n\t} else {\n\t\treturn null\n\t}\n\n}\n\n\nlistenToScroll = () => {\n  const winScroll = document.body.scrollTop || document.documentElement.scrollTop\n  let control = false;\n\n  if(winScroll > 150){\n  \tconsole.log(winScroll);\n  \tconsole.log(this.state.isCollapsed);\n  \t\n  \tif(!this.state.isCollapsed){\n  \t\t//this.props.toggleDropdown();\n  \t\tcontrol = true;\n  \t}\n  } else {\n\n  \tif(!this.state.isCollapsed){\n  \t\tcontrol = false;\n\t\t//this.props.toggleDropdown();\n\t}\n\n  }\n  this.setState({\n    winScroll:winScroll,\n    control:control\n  })\n}\n\n\trender(){\n\n\t\tif(this.state.control )\n\t\t\treturn 0 ;\n\t\telse\n\t\t    return (\n\t\t    <>\n\t\t    \t<Options />\n      <div \n\t\tclassName={styles.Header}\n\t\tref={ (divElement) => { this.divElement = divElement } }\n\t\t>\n\t\t      <p>{this.props.t('hello.label')}</p>\n\t\t      <p>{this.state.winScroll}</p>\n\t\t      <p>{this.state.height}</p>\n      </div>\n      </>\n\t\t   \n\n  );\n\t}\n\n};\n\n\nexport default withTranslation()(Header);\n/*\n\n\n\n\n*/"]},"metadata":{},"sourceType":"module"}